1. What is a real-life scenario that uses linear search?

An example of linear search is when you're at the store and trying to buy something off a rack like a thing of floss or a shirt. Maybe it's just me but I always look at the very first one on top and see if it's in good condition. If not, I'll go to the next one, then the next, then the next one behind it until I find my product that looks pristine. 

1. What is a real-life scenario that uses binary search?

An example of binary search in real life is when you're trying to check out a book at the library. You have the dewey decimal system to go off of and you're not going to start at the letter "A" if you already know the title of your book. You will look at your code and navigate towards the part of your library in which you think you're the closest to.

3. Given the alphabetically sorted collection in this checkpoint, how many iterations would it take to find the value G using linear search?

7th iteration

4. Given the alphabetically sorted collection in this checkpoint, how many iterations would it take to find the value G using binary search?

5th iteration

5.Given an unsorted collection of a million items, which algorithm would you choose between linear search and binary search? Explain your reasoning.

I would choose linear searching. Binary searching only works on sorted collections. Binary searches start in the middle and compare from there to see if the number is higher or lower. Since our collection is unsorted, that method wouldn't work.

6. Given a sorted collection of a million items, which algorithm would you choose between linear search and binary search? Explain your reasoning.

I would use binary search since our collection is sorted. You would want to start in the middle since there's so many numbers to go through. You're not going to want to start at 1 and waste time iterating.

PROGRAMMING QUESTIONS

1. You and a friend have set a wager to see who can find the word "Albatross" in the dictionary the fastest. Write a program to allow you to win the bet.

function binarySearch(collection, value){
  value = value.toLowerCase();
  let low = 0
  let high = collection.length-1;
  let mid;
  let counter = 0;

  while(low<=high){
    counter++;
    mid = Math.floor((low+high)/2);
    if(value > collection[mid]){
      low = mid+1;
    }
    else if(value < collection[mid]){
      high = mid-1;
    }
    else if(value === collection[mid]){
      return `Found 'Albatross' in ${counter}th search at index ${mid}`;
    }
  }
  return "not found";
}

collection = ['ace', 'ad', 'aflac', 'albatross', 'bat', 'cat', 'dad', 'lad', 'sad'];
newCollection = collection.sort();
value = 'Albatross';
console.log(binarySearch(newCollection, value));

2. You work at a pet store, and a child has asked you to net the only white-spotted goldfish from the fish tank. Write a program that will help you net the right fish.

function linearSearch(collection, targetFish){
    let result;
    for(let i=0; i<collection.length; i++){
      if(collection[i]===targetFish){
        result = i+1;
        break
      }
    }
    return `${result}th fish is the white-spotted goldfish`;
  }

collection = ['goldfish', 'spotted-goldfish', 'duck', 'cat', 'egg'];
targetFish = 'spotted-goldfish';
console.log(linearSearch(collection, targetFish));